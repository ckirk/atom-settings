{
  "_args": [
    [
      {
        "raw": "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
        "scope": null,
        "escapedName": null,
        "name": null,
        "rawSpec": "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
        "spec": "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
        "type": "local"
      },
      "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/apm-install-dir-11795-6491-18aowx1.gparqhyqfr"
    ]
  ],
  "_from": "../d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
  "_id": "touchbar-registry@0.3.2",
  "_inCache": true,
  "_location": "/touchbar-registry",
  "_phantomChildren": {},
  "_requested": {
    "raw": "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
    "scope": null,
    "escapedName": null,
    "name": null,
    "rawSpec": "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
    "spec": "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
    "type": "local"
  },
  "_requiredBy": [
    "#USER"
  ],
  "_resolved": "file:../d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
  "_shasum": "e10e97ced3f1d109a28c1c3b79248e2230e1447a",
  "_shrinkwrap": null,
  "_spec": "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/d-11795-6491-z9az29.ddbwdhd7vi/package.tgz",
  "_where": "/private/var/folders/20/33mj2f_561z771lhfxp282xm0000gn/T/apm-install-dir-11795-6491-18aowx1.gparqhyqfr",
  "bugs": {
    "url": "https://github.com/haklop/touchbar-registry/issues"
  },
  "dependencies": {
    "uuid": "^3.1.0"
  },
  "description": "A container for indicators on the Apple Touch bar",
  "devDependencies": {
    "eslint": "^3.2.2",
    "eslint-config-xo-space": "^0.15.0"
  },
  "engines": {
    "atom": ">=1.19.0 <2.0.0"
  },
  "eslintConfig": {
    "extends": "xo-space/esnext",
    "env": {
      "mocha": true
    },
    "rules": {
      "no-console": "error",
      "camelcase": "warn"
    },
    "globals": {
      "atom": true
    }
  },
  "homepage": "https://github.com/haklop/touchbar-registry#readme",
  "keywords": [],
  "license": "MIT",
  "main": "./lib/index",
  "name": "touchbar-registry",
  "optionalDependencies": {},
  "providedServices": {
    "touchbar-registry": {
      "description": "A container for indicators on the Apple Touch bar",
      "versions": {
        "0.2.0": "provideTouchBar",
        "0.1.0": "provideTouchBar"
      }
    }
  },
  "readme": "# touchbar registry\n\nAn abstraction of the touchbar APIs provided by Electron.\n\n## API\n\nThis package provides a service that you can use in other Atom packages. To use it, include `touchbar-registry` in the `consumedServices` section of your `package.json`:\n\n```json\n{\n  \"name\": \"my-package\",\n  \"touchbar-registry\": {\n    \"versions\": {\n      \"0.1.0\": \"consumeTouchBar\"\n    }\n  }\n}\n```\n\nThen, in your package's main module, call methods on the service:\n\n```javascript\ndeactivate() {...},\nactivate() {...},\nconsumeTouchBar(touchbarRegistry) {\n  touchbarRegistry.addItem(\n    new TouchBarButton({\n      label: 'Hello world',\n      backgroundColor: '#313440',\n      click: () => console.log('Hey!')\n    })\n  );\n}\n```\n\nThe `touchbar-registry` API has four methods:\n\n  * `addItem(item, priority)` - Add an item on the touchBar. Lower priority item are placed further to the left. Item can be any [items available on Electron](https://github.com/electron/electron/blob/master/docs/api/touch-bar.md). Return the id of the item.\n  * `setEscapeItem(item )` - Replace the escape button on the touch bar when set. Settings to null restore the default escape button. Item can be any [escapeItem](https://github.com/electron/electron/blob/master/docs/api/touch-bar.md) available on Electron.\n  * `getItems()` - Retrieve all of the items on the touch bar.\n  * `getItem(id)` - Retrieve the item with the given id.\n  * `removeItem(id)` - Remove the item with the given id.\n  * `getRightTiles()` - Retrieve the item of the escape button.\n  * `refresh()` - Force the touch bar to refresh. Usefull to close a popover button :\n\n```javascript\nnew TouchBarPopover({\n  label: 'a popover',\n  items: [\n    new TouchBarButton({\n      label: 'Button to display in the popover',\n      click: () => {\n        // do some stuff\n        console.log('Hey');\n\n        touchbarRegistry.refresh(); // this is closing the popover\n      }\n    })\n  ]\n});\n```\n\n## License\n\nThis Project is licensed under the terms of MIT License, check the license file for more info.\n\nInspired by https://github.com/atom/status-bar\n",
  "readmeFilename": "README.md",
  "repository": {
    "type": "git",
    "url": "git+https://github.com/haklop/touchbar-registry.git"
  },
  "version": "0.3.2"
}
