# Your snippets
#
# Atom snippets allow you to enter a simple prefix in the editor and hit tab to
# expand the prefix into a larger code block with templated values.
#
# You can create a new snippet in this file by typing "snip" and then hitting
# tab.
#
# An example CoffeeScript snippet to expand log to console.log:
#
# '.source.coffee':
#   'Console log':
#     'prefix': 'log'
#     'body': 'console.log $1'
#
# Each scope (e.g. '.source.coffee' above) can only be declared once.
#
# This file uses CoffeeScript Object Notation (CSON).
# If you are unfamiliar with CSON, you can read more about it in the
# Atom Flight Manual:
# http://flight-manual.atom.io/using-atom/sections/basic-customization/#_cson

'.source.js':
  # React Class Component
  'React Component':
    'prefix': 'rcc'
    'body': """
      import React, { Component } from 'react';

      class ${1:ComponentName} extends React.Component {
        constructor(props) {
          super(props);
          this.state = { state: null }
        };

        render() {
          return (
            <div></div>
          );
        }
      }

      export default ${1:ComponentName};
    """

  # React Component (stateless)
  'React Component (stateless)':
    'prefix': 'rcs'
    'body': """
      const ${1:ComponentName} = (props) => (
        <div></div>
      )
    """

  # React Function
  'React Functional Component':
    'prefix': 'rc'
    'body': """
      const ${1:ComponentName} = (props) => {
        return (

        )
      }
    """
